version: '3.5'

services:

  phrase-hunter:
    image: phrase-hunter:0.0.1
    container_name: phrase_hunter
    #    network_mode: host
    ports:
      - "8080:8080"
    environment:
      - DEBUG=false
    restart: always

  redis:
    image: redis:6.2.0
    container_name: redis_container
    ports:
      - "6379:6379"
    environment:
      - DEBUG=false
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30
    restart: unless-stopped

  postgres:
    image: postgres
    container_name: postgres_container
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-phrase-hunter}
      PGDATA: /data/postgres
    volumes:
        - ./volumes/postgres:/volumes/postgres
        - ./modules/core/src/main/resources/tables.sql:/docker-entrypoint-initdb.d/1-tables.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - ./volumes/pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    restart: unless-stopped

volumes:
  postgres:
  pgadmin: